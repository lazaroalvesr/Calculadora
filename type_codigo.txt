class Calculadora {
  private display: HTMLInputElement;

  constructor() {
    this.display = document.querySelector('.display') as HTMLInputElement;

    this.inicia = () => {
      this.capturaEnter();
      this.capturaCliques();
      this.focus();
    };

    this.capturaEnter = () => {
      document.addEventListener('keyup', (el) => {
        if (el.keyCode !== 13) return;
        this.realizaConta();
      });
    };

    this.capturaCliques = () => {
      document.addEventListener('click', (event) => {
        const el = event.target as HTMLElement;
        if (el.classList.contains('btn-num')) this.addNumDisplay(el);
        if (el.classList.contains('btn-clear')) this.clear();
        if (el.classList.contains('btn-del')) this.del();
        if (el.classList.contains('btn-eq')) this.realizaConta();
      });
    };

    this.realizaConta = () => {
      try {
        const conta = eval(this.display.value);

        if (!conta) {
          alert('Conta inválida');
          return;
        }

        this.display.value = conta.toString();
      } catch (e) {
        alert('Conta inválida');
        return;
      }
    };

    this.addNumDisplay = (el: HTMLElement) => {
      this.display.value += el.innerText;
      if (window.innerWidth > 600) {
        this.display.focus();
      }
    };

    this.clear = () => (this.display.value = '');
    this.del = () => (this.display.value = this.display.value.slice(0, -1));
  }

  inicia: () => void;
  capturaEnter: () => void;
  capturaCliques: () => void;
  realizaConta: () => void;
  addNumDisplay: (el: HTMLElement) => void;
  clear: () => void;
  del: () => void;
}

const calculadora = new Calculadora();
calculadora.inicia();
